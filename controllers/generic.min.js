!function(root,factory){"function"==typeof define&&define.amd?define(["stratus","lodash","angular","stratus.services.registry","angular-sanitize"],factory):factory(root.Stratus,root._,root.angular)}(this,(function(Stratus,_,angular){Stratus.Modules.ngSanitize=!0,Stratus.Controllers.Generic=["$scope","$element","$log","$sce","$parse","Registry",function($scope,$element,$log,$sce,$parse,Registry){if(Stratus.Instances[_.uniqueId("generic_")]=$scope,Registry.fetch($element,$scope),$scope.ctrlParent=$scope.$parent,$scope.Stratus=Stratus,$scope._=_,$scope.setUrlParams=function(options){if(angular.isObject(options)){let substance=!1;angular.forEach(options,(function(value){angular.isDefined(value)&&null!==value&&(angular.isString(value)?value.length>0&&(substance=!0):substance=!0)})),substance&&window.location.replace(_.setUrlParams(options))}},$scope.$log=$log,$scope.Math=window.Math,$scope.isArray=angular.isArray,$scope.isDate=angular.isDate,$scope.isDefined=angular.isDefined,$scope.isElement=angular.isElement,$scope.isFunction=angular.isFunction,$scope.isNumber=angular.isNumber,$scope.isObject=angular.isObject,$scope.isString=angular.isString,$scope.isUndefined=angular.isUndefined,$scope.getHTML=$sce.trustAsHtml,$scope.collection){const selected={id:$element.attr("data-selected"),raw:$element.attr("data-raw")};selected.id&&angular.isString(selected.id)&&(_.isJSON(selected.id)?(selected.id=JSON.parse(selected.id),$scope.$watch("collection.models",(function(models){$scope.selected||$scope.selectedInit||angular.forEach(models,(function(model){selected.id===model.getIdentifier()&&($scope.selected=selected.raw?model.data:model,$scope.selectedInit=!0)}))}))):(selected.model=$parse(selected.id),selected.value=selected.model($scope.$parent),angular.isArray(selected.value)&&(selected.value=selected.value.filter((function(n){return n})),selected.value.length&&($scope.selected=_.first(selected.value)))))}}]}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIjAiXSwibmFtZXMiOlsicm9vdCIsImZhY3RvcnkiLCJkZWZpbmUiLCJhbWQiLCJTdHJhdHVzIiwiXyIsImFuZ3VsYXIiLCJ0aGlzIiwiTW9kdWxlcyIsIm5nU2FuaXRpemUiLCJDb250cm9sbGVycyIsIkdlbmVyaWMiLCIkc2NvcGUiLCIkZWxlbWVudCIsIiRsb2ciLCIkc2NlIiwiJHBhcnNlIiwiUmVnaXN0cnkiLCJJbnN0YW5jZXMiLCJ1bmlxdWVJZCIsImZldGNoIiwiY3RybFBhcmVudCIsIiRwYXJlbnQiLCJzZXRVcmxQYXJhbXMiLCJvcHRpb25zIiwiaXNPYmplY3QiLCJzdWJzdGFuY2UiLCJmb3JFYWNoIiwidmFsdWUiLCJpc0RlZmluZWQiLCJpc1N0cmluZyIsImxlbmd0aCIsIndpbmRvdyIsImxvY2F0aW9uIiwicmVwbGFjZSIsIk1hdGgiLCJpc0FycmF5IiwiaXNEYXRlIiwiaXNFbGVtZW50IiwiaXNGdW5jdGlvbiIsImlzTnVtYmVyIiwiaXNVbmRlZmluZWQiLCJnZXRIVE1MIiwidHJ1c3RBc0h0bWwiLCJjb2xsZWN0aW9uIiwic2VsZWN0ZWQiLCJpZCIsImF0dHIiLCJyYXciLCJpc0pTT04iLCJKU09OIiwicGFyc2UiLCIkd2F0Y2giLCJtb2RlbHMiLCJzZWxlY3RlZEluaXQiLCJtb2RlbCIsImdldElkZW50aWZpZXIiLCJkYXRhIiwiZmlsdGVyIiwibiIsImZpcnN0Il0sIm1hcHBpbmdzIjoiQ0FLQSxTQUFXQSxLQUFNQyxTQUNPLG1CQUFYQyxRQUF5QkEsT0FBT0MsSUFDekNELE9BQU8sQ0FBQyxVQUFXLFNBQVUsVUFBVyw0QkFBNkIsb0JBQXFCRCxTQUUxRkEsUUFBUUQsS0FBS0ksUUFBU0osS0FBS0ssRUFBR0wsS0FBS00sU0FKdkMsQ0FNR0MsTUFBTSxTQUFVSCxRQUFTQyxFQUFHQyxTQUU3QkYsUUFBUUksUUFBUUMsWUFBYSxFQUc3QkwsUUFBUU0sWUFBWUMsUUFBVSxDQUFDLFNBQVUsV0FBWSxPQUFRLE9BQVEsU0FBVSxXQUFZLFNBQVVDLE9BQVFDLFNBQVVDLEtBQU1DLEtBQU1DLE9BQVFDLFVBa0R6SSxHQWhEQWIsUUFBUWMsVUFBVWIsRUFBRWMsU0FBUyxhQUFlUCxPQUU1Q0ssU0FBU0csTUFBTVAsU0FBVUQsUUFPekJBLE9BQU9TLFdBQWFULE9BQU9VLFFBQzNCVixPQUFPUixRQUFVQSxRQUNqQlEsT0FBT1AsRUFBSUEsRUFFWE8sT0FBT1csYUFBZSxTQUFVQyxTQUM5QixHQUFJbEIsUUFBUW1CLFNBQVNELFNBQVUsQ0FDN0IsSUFBSUUsV0FBWSxFQUNoQnBCLFFBQVFxQixRQUFRSCxTQUFTLFNBQVVJLE9BQzdCdEIsUUFBUXVCLFVBQVVELFFBQW9CLE9BQVZBLFFBQ3pCdEIsUUFBUXdCLFNBQVNGLE9BRVhBLE1BQU1HLE9BQVMsSUFDeEJMLFdBQVksR0FGWkEsV0FBWSxNQU9kQSxXQUNGTSxPQUFPQyxTQUFTQyxRQUFRN0IsRUFBRWtCLGFBQWFDLFlBSzdDWixPQUFPRSxLQUFPQSxLQUVkRixPQUFPdUIsS0FBT0gsT0FBT0csS0FFckJ2QixPQUFPd0IsUUFBVTlCLFFBQVE4QixRQUN6QnhCLE9BQU95QixPQUFTL0IsUUFBUStCLE9BQ3hCekIsT0FBT2lCLFVBQVl2QixRQUFRdUIsVUFDM0JqQixPQUFPMEIsVUFBWWhDLFFBQVFnQyxVQUMzQjFCLE9BQU8yQixXQUFhakMsUUFBUWlDLFdBQzVCM0IsT0FBTzRCLFNBQVdsQyxRQUFRa0MsU0FDMUI1QixPQUFPYSxTQUFXbkIsUUFBUW1CLFNBQzFCYixPQUFPa0IsU0FBV3hCLFFBQVF3QixTQUMxQmxCLE9BQU82QixZQUFjbkMsUUFBUW1DLFlBRTdCN0IsT0FBTzhCLFFBQVUzQixLQUFLNEIsWUFFbEIvQixPQUFPZ0MsV0FBWSxDQUNyQixNQUFNQyxTQUFXLENBQ2ZDLEdBQUlqQyxTQUFTa0MsS0FBSyxpQkFDbEJDLElBQUtuQyxTQUFTa0MsS0FBSyxhQUdqQkYsU0FBU0MsSUFDUHhDLFFBQVF3QixTQUFTZSxTQUFTQyxNQUN4QnpDLEVBQUU0QyxPQUFPSixTQUFTQyxLQUNwQkQsU0FBU0MsR0FBS0ksS0FBS0MsTUFBTU4sU0FBU0MsSUFDbENsQyxPQUFPd0MsT0FBTyxxQkFBcUIsU0FBVUMsUUFDdEN6QyxPQUFPaUMsVUFBYWpDLE9BQU8wQyxjQUM5QmhELFFBQVFxQixRQUFRMEIsUUFBUSxTQUFVRSxPQUM1QlYsU0FBU0MsS0FBT1MsTUFBTUMsa0JBQ3hCNUMsT0FBT2lDLFNBQVdBLFNBQVNHLElBQU1PLE1BQU1FLEtBQU9GLE1BQzlDM0MsT0FBTzBDLGNBQWUsV0FNOUJULFNBQVNVLE1BQVF2QyxPQUFPNkIsU0FBU0MsSUFDakNELFNBQVNqQixNQUFRaUIsU0FBU1UsTUFBTTNDLE9BQU9VLFNBRW5DaEIsUUFBUThCLFFBQVFTLFNBQVNqQixTQUMzQmlCLFNBQVNqQixNQUFRaUIsU0FBU2pCLE1BQU04QixRQUFPLFNBQVVDLEdBQy9DLE9BQU9BLEtBR0xkLFNBQVNqQixNQUFNRyxTQUNqQm5CLE9BQU9pQyxTQUFXeEMsRUFBRXVELE1BQU1mLFNBQVNqQiJ9