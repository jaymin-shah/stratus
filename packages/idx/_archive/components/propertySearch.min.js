!function(root,factory){"function"==typeof define&&define.amd?define(["stratus","lodash","angular","stratus.services.idx"],factory):factory(root.Stratus,root._,root.angular,root.moment)}(this,function(Stratus,_,angular){const min=Stratus.Environment.get("production")?".min":"";Stratus.Components.PropertySearch={bindings:{elementId:"@",listId:"@",listLinkUrl:"@",listLinkTarget:"@",options:"@",template:"@",variableSync:"@"},controller:["$scope","$attrs","$window","$timeout","$mdConstant","$q","$mdPanel","Idx",function($scope,$attrs,$window,$timeout,$mdConstant,$q,$mdPanel,Idx){this.uid=_.uniqueId("property_search_"),Stratus.Instances[this.uid]=$scope,$scope.elementId=$attrs.elementId||this.uid,Stratus.Internals.CssLoader(Stratus.BaseUrl+"content/property/stratus/components/propertySearch"+min+".css"),$scope.$mdConstant=$mdConstant,this.$onInit=function(){$scope.listId=$attrs.listId||null,$scope.listInitialized=!1,$scope.listLinkUrl=$attrs.listLinkUrl||"/property/list",$scope.listLinkTarget=$attrs.listLinkTarget||"_self",$timeout(function(){$scope.listInitialized||$scope.refreshSearchWidgetOptions()},2e3),$scope.options=$attrs.options&&_.isJSON($attrs.options)?JSON.parse($attrs.options):{},$scope.filterMenu=null,$scope.options.forRent=!1,$scope.options.query=$scope.options.query||{},$scope.setQuery($scope.options.query),$scope.options.selection=$scope.options.selection||{},$scope.options.selection.BedroomsTotalMin=$scope.options.selection.BedroomsTotalMin||[{name:"1+",value:1},{name:"2+",value:2},{name:"3+",value:3},{name:"4+",value:4},{name:"5+",value:5}],$scope.options.selection.BathroomsFullMin=$scope.options.selection.BathroomsFullMin||[{name:"1+",value:1},{name:"2+",value:2},{name:"3+",value:3},{name:"4+",value:4},{name:"5+",value:5}],$scope.options.selection.Order=$scope.options.selection.Order||[{name:"Price (high to low)",value:"-ListPrice"},{name:"Price (low to high)",value:"ListPrice"}],$scope.options.selection.Status=$scope.options.selection.Status||{},$scope.options.selection.Status.default=$scope.options.selection.Status.default||{Sale:["Active","Contract"],Lease:["Active"]},$scope.options.selection.ListingType=$scope.options.selection.ListingType||{},$scope.options.selection.ListingType.group=$scope.options.selection.ListingType.group||{Residential:!0,Commercial:!1},$scope.options.selection.ListingType.list=$scope.options.selection.ListingType.list||{Residential:["House","Condo","Townhouse","MultiFamily","Manufactured","Land","LeaseHouse","LeaseCondo","LeaseTownhouse","LeaseOther"],Commercial:["Commercial","CommercialBusinessOp","CommercialResidential","CommercialLand","LeaseCommercial"],Lease:["LeaseHouse","LeaseCondo","LeaseTownhouse","LeaseOther","LeaseCommercial"]},$scope.options.selection.ListingType.default=$scope.options.selection.ListingType.default||{Sale:{Residential:["House","Condo","Townhouse"],Commercial:["Commercial","CommercialBusinessOp"]},Lease:{Residential:["LeaseHouse","LeaseCondo","LeaseTownhouse"],Commercial:["LeaseCommercial"]}},$scope.options.selection.ListingType.All=$scope.options.selection.ListingType.All||[{name:"House",value:"House",group:"Residential",lease:!1},{name:"Condo",value:"Condo",group:"Residential",lease:!1},{name:"Townhouse",value:"Townhouse",group:"Residential",lease:!1},{name:"Multi-Family",value:"MultiFamily",group:"Residential",lease:!1},{name:"Manufactured",value:"Manufactured",group:"Residential",lease:!1},{name:"Land",value:"Land",group:"Residential",lease:!1},{name:"Other",value:"Other",group:"Residential",lease:!1},{name:"Commercial",value:"Commercial",group:"Commercial",lease:!1},{name:"Commercial Business Op",value:"CommercialBusinessOp",group:"Commercial",lease:!1},{name:"Commercial Residential",value:"CommercialResidential",group:"Commercial",lease:!1},{name:"Commercial Land",value:"CommercialLand",group:"Commercial",lease:!1},{name:"House",value:"LeaseHouse",group:"Residential",lease:!0},{name:"Condo",value:"LeaseCondo",group:"Residential",lease:!0},{name:"Townhouse",value:"LeaseTownhouse",group:"Residential",lease:!0},{name:"Other",value:"LeaseOther",group:"Residential",lease:!0},{name:"Commercial",value:"LeaseCommercial",group:"Commercial",lease:!0}],$scope.setQueryDefaults(),Idx.registerSearchInstance($scope.elementId,$scope,$scope.listId),$scope.variableSync()},$scope.$watch("options.query.ListingType",function(){$scope.options.selection.ListingType.list&&($scope.options.selection.ListingType.group.Residential=$scope.arrayIntersect($scope.options.selection.ListingType.list.Residential,$scope.options.query.ListingType),$scope.options.selection.ListingType.group.Commercial=$scope.arrayIntersect($scope.options.selection.ListingType.list.Commercial,$scope.options.query.ListingType),$scope.options.forRent=$scope.arrayIntersect($scope.options.selection.ListingType.list.Lease,$scope.options.query.ListingType))}),$scope.updateScopeValuePath=async function(scopeVarPath,value){const scopePieces=scopeVarPath.split(".");return $scope.updateNestedPathValue($scope,scopePieces,value)},$scope.updateNestedPathValue=async function(currentNest,pathPieces,value){const currentPiece=pathPieces.shift();return currentPiece&&Object.prototype.hasOwnProperty.call(currentNest,currentPiece)?pathPieces[0]?$scope.updateNestedPathValue(currentNest[currentPiece],pathPieces,value):(_.isArray(currentNest[currentPiece])&&!_.isArray(value)&&(value=""===value?[]:value.split(",")),currentNest[currentPiece]=value,value):null},$scope.getInput=function(elementId){return angular.element(document.getElementById(elementId))},$scope.variableSync=async function(){$scope.variableSyncing=$attrs.variableSync&&_.isJSON($attrs.variableSync)?JSON.parse($attrs.variableSync):{};const promises=[];Object.keys($scope.variableSyncing).forEach(function(elementId){promises.push($q(async function(resolve,reject){const varElement=$scope.getInput(elementId);if(varElement){const scopeVarPath=$scope.variableSyncing[elementId];await $scope.updateScopeValuePath(scopeVarPath,varElement.val()),$scope.$watch(scopeVarPath,function(value){varElement.val(value)},!0)}resolve()}))}),await $q.all(promises)},$scope.inArray=function(item,array){return _.isArray(array)?-1!==array.indexOf(item):0},$scope.arrayIntersect=function(itemArray,array){return _.isArray(array)&&_.isArray(itemArray)?itemArray.filter(value=>-1!==array.indexOf(value)).length>0:(console.warn("Array undefined, cannot search for",itemArray),[])},$scope.toggleArrayElement=function(item,array){const arrayIndex=(array=array||[]).indexOf(item);arrayIndex>=0?array.splice(arrayIndex,1):array.push(item)},$scope.showInlinePopup=function(ev,menuElement){if(!$scope.filterMenu){const position=$mdPanel.newPanelPosition().relativeTo(ev.srcElement).addPanelPosition($mdPanel.xPosition.CENTER,$mdPanel.yPosition.BELOW),animation=$mdPanel.newPanelAnimation();animation.openFrom(position),animation.closeTo(position),animation.withAnimation($mdPanel.animation.FADE);var config={animation:animation,attachTo:angular.element(document.body),contentElement:menuElement,position:position,openFrom:ev,clickOutsideToClose:!0,escapeToClose:!0,focusOnOpen:!1,zIndex:2};$scope.filterMenu=$mdPanel.create(config),$scope.filterMenu.reposition=function(){$timeout(function(){$scope.filterMenu.updatePosition(position)},100)}}$scope.filterMenu.open()},$scope.setQuery=function(newQuery){$scope.options.query=newQuery||{},$scope.options.query.Status=$scope.options.query.Status||[],$scope.options.query.ListingType=$scope.options.query.ListingType||[],$scope.options.query.Order=$scope.options.query.Order||null,$scope.options.query.City=$scope.options.query.City||"",$scope.options.query.ListPriceMin=$scope.options.query.ListPriceMin||null,$scope.options.query.ListPriceMax=$scope.options.query.ListPriceMax||null,$scope.options.query.BathroomsFullMin=$scope.options.query.BathroomsFullMin||null,$scope.options.query.BedroomsTotalMin=$scope.options.query.BedroomsTotalMin||null,$scope.options.query.AgentLicense=$scope.options.query.AgentLicense||[]},$scope.setQueryDefaults=function(){$scope.$applyAsync(function(){$scope.options.query.ListingType.length<1&&($scope.options.query.ListingType=$scope.options.selection.ListingType.default.Sale.Residential,$scope.selectDefaultListingType())})},$scope.selectDefaultListingType=function(listingGroup){listingGroup||(listingGroup="Commercial",$scope.options.selection.ListingType.group.Commercial||(listingGroup="Residential")),$scope.options.query.ListingType=$scope.options.forRent?$scope.options.selection.ListingType.default.Lease[listingGroup]:$scope.options.selection.ListingType.default.Sale[listingGroup],$scope.filterMenu&&$scope.filterMenu.reposition(),$scope.options.forRent?$scope.options.query.Status=$scope.options.selection.Status.default.Lease:$scope.options.query.Status=$scope.options.query.Status&&$scope.options.query.Status.length>0?$scope.options.query.Status:$scope.options.selection.Status.default.Lease},$scope.searchProperties=function(){let listScope;$scope.listId&&(listScope=Idx.getListInstance($scope.listId)),listScope?($scope.options.query.Page=1,listScope.searchProperties($scope.options.query,!0)):(Idx.setUrlOptions("Search",$scope.options.query),$window.open($scope.listLinkUrl+"#!/"+Idx.getUrlOptionsPath(),$scope.listLinkTarget))},$scope.refreshSearchWidgetOptions=function(){$scope.listId&&Idx.getListInstance($scope.listId).refreshSearchWidgetOptions()}}],templateUrl:function($element,$attrs){const templateMin=!$attrs.templateMin||!_.isJSON($attrs.templateMin)||JSON.parse($attrs.templateMin);return Stratus.BaseUrl+"content/property/stratus/components/"+($attrs.template||"propertySearch")+(templateMin&&""!==min?".min":"")+".html"}}});