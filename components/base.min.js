!function(root,factory){"function"==typeof define&&define.amd?define(["stratus","lodash","angular","angular-material","stratus.services.registry","stratus.services.model","stratus.services.collection"],factory):factory(root.Stratus,root._,root.angular)}(this,function(Stratus,_,angular){const min=Stratus.Environment.get("production")?".min":"";Stratus.Components.Base={transclude:{model:"?stratusBaseModel"},bindings:{elementId:"@",ngModel:"=",property:"@",target:"@",id:"@",manifest:"@",decouple:"@",direct:"@",api:"@",urlRoot:"@",limit:"@",options:"<"},controller:function($scope,$attrs,Registry,Model,Collection){this.uid=_.uniqueId(_.camelToSnake("base")+"_"),Stratus.Instances[this.uid]=$scope,$scope.elementId=$attrs.elementId||this.uid,Stratus.Internals.CssLoader(Stratus.BaseUrl+Stratus.BundlePath+"components/base"+min+".css"),$scope.initialized=!1,$scope.property=$attrs.property||null,$scope.data=null,$scope.model=null,$scope.collection=null,$attrs.target&&Registry.fetch($attrs,$scope),$scope.$watch("$ctrl.ngModel",function(data){data instanceof Model&&data!==$scope.model?$scope.model=data:data instanceof Collection&&data!==$scope.collection&&($scope.collection=data)}),$scope.initialize=function(){$scope.initialized||($scope.model&&($scope.initialized=!0,$scope.model.on("change",function(){console.log("model changed:",arguments)})),$scope.collection&&($scope.initialized=!0,console.log("collection available")))},$scope.$watch("$scope.model.completed",function(newVal,oldVal){newVal&&!_.isEqual(newVal,oldVal)&&$scope.initialize()}),$scope.$watch("$scope.collection.completed",function(newVal,oldVal){newVal&&!_.isEqual(newVal,oldVal)&&$scope.initialize()}),Stratus.Environment.get("production")||console.log("base","component:",$scope,$attrs)},templateUrl:Stratus.BaseUrl+Stratus.BundlePath+"components/base"+min+".html"}});