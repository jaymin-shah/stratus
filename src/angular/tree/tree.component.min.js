System.register(["@angular/core","@angular/cdk/drag-drop","@angular/cdk/tree","@angular/platform-browser","@angular/material/icon","rxjs","stratus","lodash"],(function(t,e){"use strict";var r,s,i,n,a,o,d,c,h,u,l=this&&this.__decorate||function(t,e,r,s){var i,n=arguments.length,a=n<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,r):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,r,s);else for(var o=t.length-1;o>=0;o--)(i=t[o])&&(a=(n<3?i(a):n>3?i(e,r,a):i(e,r))||a);return n>3&&a&&Object.defineProperty(e,r,a),a},p=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},f=this&&this.__awaiter||function(t,e,r,s){return new(r||(r=Promise))((function(i,n){function a(t){try{d(s.next(t))}catch(t){n(t)}}function o(t){try{d(s.throw(t))}catch(t){n(t)}}function d(t){var e;t.done?i(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(a,o)}d((s=s.apply(t,e||[])).next())}))};e&&e.id;return{setters:[function(t){r=t},function(t){s=t},function(t){i=t},function(t){n=t},function(t){a=t},function(t){o=t},function(t){d=t},function(t){c=t}],execute:function(){h="/assets/1/0/bundles/sitetheorystratus/stratus/src/angular","@stratus/angular","tree",u=class{constructor(t,e,r){this.iconRegistry=t,this.sanitizer=e,this.ref=r,this.title="tree_component",this.registry=new d.Data.Registry,this.onChange=new o.Subject,this.unsettled=!1,this.dropLists=[],this.dropListIdMap={},this.dropListMap={},this.expandedNodeSet=new Set,this.dragging=!1,this.expandDelay=1e3,this.treeControl=new i.NestedTreeControl(t=>t.children||[]),this.uid=c.uniqueId("sa_tree_component_"),d.Instances[this.uid]=this,this._=c,t.addSvgIcon("delete",e.bypassSecurityTrustResourceUrl("/Api/Resource?path=@SitetheoryCoreBundle:images/icons/actionButtons/delete.svg")),d.Internals.CssLoader(`${h}/tree/tree.component.css`);const s=this;this.fetchData().then(t=>{if(!t.on)return void console.warn("Unable to bind data from Registry!");const e=()=>{!s.unsettled&&t.completed&&(s.dataDefer(s.subscriber),r.detectChanges())};t.on("change",e),e()}),this.dataSub=new o.Observable(t=>this.dataDefer(t)),this.dropListIdMap[`${this.uid}_parent_drop_list`]=!0,this.trackDropLists()}remove(t){}removeNode(t,e){const r=t.indexOf(e);return-1!==r&&(t.splice(r,1),!0)}nodeIsEqual(t,e){return t&&e?t.id===e.id:t===e}fetchData(){return f(this,void 0,void 0,(function*(){return this.fetched||(this.fetched=this.registry.fetch(d.Select("#content-menu-primary"),this)),this.fetched}))}dataDefer(t){this.subscriber=t;const e=this.dataRef(!0);e&&e.length?t.next(e):setTimeout(()=>this.dataDefer(t),200)}dataRef(t=!1){if(!this.collection)return[];if(!t&&this.tree&&this.tree.length>0)return this.tree;let e=this.collection.models;return e&&c.isArray(e)?(e=c.sortBy(e,["data.priority"]),this.treeMap={},this.tree=[],c.each(e,t=>{const e=c.get(t,"data.id"),r=c.get(t,"data.nestParent.id");this.dropListIdMap[`${this.uid}_node_${e}_drop_list`]=!0,c.has(this.treeMap,e)||(this.treeMap[e]={id:e,model:null,children:[],expanded:!0}),this.treeMap[e].model=t,r?(c.has(this.treeMap,r)||(this.treeMap[r]={id:r,model:null,children:[],expanded:!0}),this.treeMap[r].children.push(this.treeMap[e])):this.tree.push(this.treeMap[e])}),this.trackDropLists(),this.tree):[]}trackDropLists(){this.dropLists=[],c.each(this.dropListIdMap,(t,e)=>{if(!t)return;const r=e in this.dropListMap,s=r?this.dropListMap[e]:document.getElementById(e);s&&(this.dropLists.push(e),r||(this.dropListMap[e]=s))})}onDragDrop(t){if(!t.isPointerOverContainer)return;const e=t.item.data;if(!e)return;const r=t.container.data,i=t.previousContainer.data,n=r?r.children:this.dataRef();if(!n)return;if(this.unsettled=!0,!this.nodeIsEqual(r,i)){r&&r.children.push(e),i&&this.removeNode(i.children,e);const t={};r&&["id","name"].forEach(e=>{const s=c.get(r,`model.data.${e}`);s&&c.set(t,e,s)}),e.model.set("nestParent",r?t:r)}s.moveItemInArray(n,t.previousIndex,t.currentIndex);let a=0;c.each(n,t=>{t.model&&t.model.set&&t.model.set("priority",++a)}),e.model.save(),this.unsettled=!1}},u=l([r.Component({selector:"sa-tree",templateUrl:`${h}/tree/tree.component.html`,changeDetection:r.ChangeDetectionStrategy.OnPush}),p("design:paramtypes",[a.MatIconRegistry,n.DomSanitizer,r.ChangeDetectorRef])],u),t("TreeComponent",u)}}}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,